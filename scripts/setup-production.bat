@echo off
REM Script de configura√ß√£o completa para ambiente de produ√ß√£o (Windows)
REM Automa√ß√£o de Mensagem de Espera - CAM Krolik Integration

echo üöÄ Configurando ambiente de produ√ß√£o completo...

REM Verificar se Node.js est√° instalado
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Node.js n√£o encontrado. Por favor, instale Node.js 18.x ou superior.
    echo üì• Download: https://nodejs.org/
    pause
    exit /b 1
) else (
    echo ‚úÖ Node.js encontrado
)

REM Verificar se npm est√° dispon√≠vel
npm --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå npm n√£o encontrado
    pause
    exit /b 1
) else (
    echo ‚úÖ npm encontrado
)

REM Instalar PM2 globalmente se n√£o estiver instalado
pm2 --version >nul 2>&1
if %errorlevel% neq 0 (
    echo üì¶ Instalando PM2 globalmente...
    npm install -g pm2
) else (
    echo ‚úÖ PM2 encontrado
)

REM Instalar depend√™ncias do projeto
echo üì¶ Instalando depend√™ncias do projeto...
npm ci --production
if %errorlevel% neq 0 (
    echo ‚ùå Falha na instala√ß√£o de depend√™ncias
    pause
    exit /b 1
)

REM Compilar aplica√ß√£o
echo üî® Compilando aplica√ß√£o TypeScript...
npm run build
if %errorlevel% neq 0 (
    echo ‚ùå Falha na compila√ß√£o
    pause
    exit /b 1
)

REM Verificar se build foi criado
if not exist dist (
    echo ‚ùå Falha na compila√ß√£o. Diret√≥rio 'dist' n√£o foi criado.
    pause
    exit /b 1
)

REM Criar estrutura de diret√≥rios
echo üìÅ Criando estrutura de diret√≥rios...
if not exist logs mkdir logs
if not exist data mkdir data
if not exist data\backup mkdir data\backup
if not exist data\temp mkdir data\temp
if not exist config mkdir config

REM Criar arquivo .env se n√£o existir
if not exist .env (
    echo üìã Criando arquivo .env a partir do template...
    copy .env.example .env
    echo ‚ö†Ô∏è  IMPORTANTE: Configure as vari√°veis no arquivo .env antes de iniciar!
    echo    Edite o arquivo .env com suas configura√ß√µes espec√≠ficas.
) else (
    echo ‚úÖ Arquivo .env j√° existe
)

REM Validar configura√ß√µes se .env estiver configurado
echo üîç Validando configura√ß√µes...
node scripts\validate-env.js >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Configura√ß√µes v√°lidas
) else (
    echo ‚ö†Ô∏è  Algumas configura√ß√µes precisam ser ajustadas no arquivo .env
)

REM Executar testes de valida√ß√£o
echo üß™ Executando testes de valida√ß√£o...
npm test
if %errorlevel% equ 0 (
    echo ‚úÖ Todos os testes passaram
) else (
    echo ‚ö†Ô∏è  Alguns testes falharam. Verifique a configura√ß√£o.
)

REM Criar script de backup autom√°tico
echo üíæ Criando script de backup autom√°tico...
(
echo @echo off
echo REM Backup autom√°tico
echo set BACKUP_DIR=data\backup
echo set DATE=%%date:~-4,4%%%%date:~-10,2%%%%date:~-7,2%%_%%time:~0,2%%%%time:~3,2%%%%time:~6,2%%
echo set DATE=%%DATE: =0%%
echo set BACKUP_FILE=backup_%%DATE%%.zip
echo echo üì¶ Criando backup: %%BACKUP_FILE%%
echo powershell Compress-Archive -Path . -DestinationPath %%BACKUP_DIR%%\%%BACKUP_FILE%% -Exclude node_modules,dist,logs,data\backup
echo echo ‚úÖ Backup criado: %%BACKUP_DIR%%\%%BACKUP_FILE%%
) > scripts\auto-backup.bat

REM Criar script de monitoramento de sa√∫de
echo üîç Criando script de monitoramento de sa√∫de...
(
echo @echo off
echo REM Monitor de sa√∫de da aplica√ß√£o
echo set HEALTH_URL=http://localhost:3000/health
echo set LOG_FILE=logs\health-monitor.log
echo set timestamp=%%date%% %%time%%
echo curl -f -s %%HEALTH_URL%% ^>nul 2^>^&1
echo if %%errorlevel%% equ 0 ^(
echo     echo [%%timestamp%%] ‚úÖ Aplica√ß√£o saud√°vel ^>^> %%LOG_FILE%%
echo ^) else ^(
echo     echo [%%timestamp%%] ‚ùå Aplica√ß√£o n√£o responde ^>^> %%LOG_FILE%%
echo     pm2 restart automacao-mensagem-espera
echo ^)
) > scripts\health-monitor.bat

REM Criar script de inicializa√ß√£o como servi√ßo Windows
echo ‚öôÔ∏è  Criando script de servi√ßo Windows...
(
echo @echo off
echo REM Instalar como servi√ßo Windows usando PM2
echo echo üîß Configurando servi√ßo Windows...
echo pm2 install pm2-windows-service
echo pm2 set pm2-windows-service:SERVICE_NAME "AutomacaoMensagemEspera"
echo pm2 set pm2-windows-service:SERVICE_DISPLAY_NAME "Automa√ß√£o de Mensagem de Espera"
echo pm2 set pm2-windows-service:SERVICE_DESCRIPTION "Sistema de automa√ß√£o para envio de mensagens de espera integrado com CAM Krolik"
echo pm2 start ecosystem.config.js --env production
echo pm2 save
echo pm2 startup
echo echo ‚úÖ Servi√ßo Windows configurado
echo echo    Para gerenciar: services.msc
) > scripts\install-service.bat

echo.
echo üéâ Configura√ß√£o de produ√ß√£o conclu√≠da com sucesso!
echo.
echo üìù Pr√≥ximos passos:
echo 1. Configure as vari√°veis no arquivo .env:
echo    - KROLIK_API_BASE_URL
echo    - KROLIK_API_TOKEN
echo    - SUPABASE_URL
echo    - SUPABASE_ANON_KEY
echo.
echo 2. Valide as configura√ß√µes:
echo    node scripts\validate-env.js --check-connectivity
echo.
echo 3. Inicie a aplica√ß√£o:
echo    pm2 start ecosystem.config.js --env production
echo.
echo 4. ^(Opcional^) Instale como servi√ßo Windows:
echo    scripts\install-service.bat
echo.
echo 5. Monitore a aplica√ß√£o:
echo    pm2 monit
echo    pm2 logs automacao-mensagem-espera
echo.
echo üîó Acesse a interface web em: http://localhost:3000
echo.
pause